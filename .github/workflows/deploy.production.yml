name: Deploy Next.js app to production

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: 22.12.0
          cache: 'npm'
      - name: Create .env file
        run: echo "${{secrets.ENV_PRODUCTION}}" > .env
      - run: npm i --force
      - run: npm run build

      - name: send Telegram message after build
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ðŸŽ‰ Build successfully completed!

            ${{ github.actor }} created commit:

            Commit message: ${{ github.event.commits[0].message }}

            Repository: ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}

      - name: send Telegram message after build
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ðŸ˜¢ Build failed!

            ${{ github.actor }} created commit:

            Commit message: ${{ github.event.commits[0].message }}

            Repository: ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST_PRODUCTION }}
          username: ${{ secrets.USERNAME_PRODUCTION }}
          password: ${{ secrets.PASSWORD_PRODUCTION }}
          port: ${{ secrets.PORT_PRODUCTION }}
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            cd ~/wowwraps-next14
            git fetch --all
            git reset --hard origin/main
            echo "${{secrets.ENV_PRODUCTION}}" > .env
            npm i --force
            npx prisma generate
            npm run build
            pm2 restart wowwraps-next14

      - name: send Telegram message after deploy
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ðŸ›¹ Deploy successfully completed!

            ${{ github.actor }} created commit:

            Commit message: ${{ github.event.commits[0].message }}

            Repository: ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}

      - name: send Telegram message after deploy
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ðŸ’£ Deploy failed!

            ${{ github.actor }} created commit:

            Commit message: ${{ github.event.commits[0].message }}

            Repository: ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
